<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- data_order表:订单实体模块 -->
<mapper namespace="com.song.mapper.data.DataOrderMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.song.entity.data.DataOrder">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="buy_count" property="buyCount" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="scope_id" property="scopeId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        buy_count,create_time,goods_id,id,remark,scope_id,user_id 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="buyCount != null">
                and buy_count = #{buyCount,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="goodsId != null">
                and goods_id = #{goodsId,jdbcType=INTEGER}
            </if>
            <if test=" id != null">
                id  = #{id,jdbcType=INTEGER}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="scopeId != null">
                and scope_id = #{scopeId,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.song.entity.data.DataOrder" keyProperty="id" useGeneratedKeys="true">
        insert into data_order(buy_count,create_time,goods_id,remark,scope_id,user_id)values(#{buyCount,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{goodsId,jdbcType=INTEGER},#{remark,jdbcType=VARCHAR},#{scopeId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.song.entity.data.DataOrder">
        update data_order set 
            buy_count = #{buyCount,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            goods_id = #{goodsId,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR},
            scope_id = #{scopeId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update data_order
          <set>
            <if test="buyCount != null">
                buy_count = #{buyCount,jdbcType=INTEGER},                
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="goodsId != null">
                goods_id = #{goodsId,jdbcType=INTEGER},                
            </if>
            <if test="remark != null and remark != ''">        
                remark = #{remark,jdbcType=VARCHAR},                
            </if>
            <if test="scopeId != null">
                scope_id = #{scopeId,jdbcType=INTEGER},                
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from data_order
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from data_order
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from data_order
        <include refid="searchBy"/>
    </select>
    
</mapper>
